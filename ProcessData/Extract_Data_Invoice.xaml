<Activity mc:Ignorable="sap sap2010" x:Class="Extract_pdf_test" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_ReferenceNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_BeginDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_EndDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_SalesAmount" Type="OutArgument(x:String)" />
    <x:Property Name="out_dt_SalesAmount" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_UPC" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_AdDate" Type="OutArgument(x:String)" />
    <x:Property Name="in_InvoiceFilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_ProductName" Type="OutArgument(x:String)" />
    <x:Property Name="out_invoiceContainsADDate" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_dt_ProductName" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>925.6,4036.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Extract_pdf_test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Extract_pdf_test" sap:VirtualizedContainerService.HintSize="885.6,3956.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="pdf_text" />
      <Variable x:TypeArguments="s:String[]" Name="Split_Text" />
      <Variable x:TypeArguments="str:Regex" Name="Regex" />
      <Variable x:TypeArguments="x:String" Name="upcCode" />
      <Variable x:TypeArguments="x:String" Name="endDate" />
      <Variable x:TypeArguments="x:String" Name="beginDate" />
      <Variable x:TypeArguments="x:String" Name="adDate" />
      <Variable x:TypeArguments="x:String" Name="descriptionRetail" />
      <Variable x:TypeArguments="x:String" Name="totalAmount" />
      <Variable x:TypeArguments="x:String" Name="documentNumber" />
      <Variable x:TypeArguments="x:String" Name="searchText" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.Data.DataTable]" Name="dt_UPC" />
      <Variable x:TypeArguments="x:String" Name="temp" />
      <Variable x:TypeArguments="x:String" Name="salesAmount" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_salesAmount" />
      <Variable x:TypeArguments="x:String" Name="upcFamily" />
      <Variable x:TypeArguments="x:String" Name="referenceNumber" />
      <Variable x:TypeArguments="x:String" Name="discriptionName" />
      <Variable x:TypeArguments="x:String" Name="bannerName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadPDFText DisplayName="Read PDF Text" FileName="[in_InvoiceFilePath]" sap:VirtualizedContainerService.HintSize="847.2,60" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[pdf_text]" />
    <ui:BuildDataTable DataTable="[out_dt_UPC]" DisplayName="Build Data Table for upcCode" sap:VirtualizedContainerService.HintSize="847.2,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;upcCode&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;upcFamily&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:BuildDataTable DataTable="[out_dt_salesAmount]" DisplayName="Build Data Table for salesAmount" sap:VirtualizedContainerService.HintSize="847.2,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;salesAmount&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:BuildDataTable DataTable="[out_dt_salesAmount]" DisplayName="Build Data Table for ProductName" sap:VirtualizedContainerService.HintSize="847.2,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;ProductName&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
    <Assign sap:VirtualizedContainerService.HintSize="847.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Split_Text]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[pdf_text.Split(Environment.NewLine.ToArray,StringSplitOptions.RemoveEmptyEntries)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="847.2,3364" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Split_Text]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="815.2,3229.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="776.8,3136.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[String.IsNullOrEmpty(out_AdDate)]" sap:VirtualizedContainerService.HintSize="738.4,744.8" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="597.6,595.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="559.2,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_AdDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString,"AD DATE ((0?[13578]|10|12)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1}))|(0?[2469]|11)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1})))").Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[System.Text.RegularExpressions.Regex.Match(item.ToString,&quot;AD DATE&quot;).Value.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="559.2,209.6" sap2010:WorkflowViewState.IdRef="If_14">
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[out_invoiceContainsADDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[out_invoiceContainsADDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <Sequence sap:VirtualizedContainerService.HintSize="559.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_AdDate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[out_AdDate.Replace("AD DATE","").ToString.Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[String.IsNullOrEmpty(out_ReferenceNumber)]" sap:VirtualizedContainerService.HintSize="738.4,495.2" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="336,345.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="297.6,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_ReferenceNumber]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString,"REFERENCE [0-9]{10}").Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="297.6,152.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ReferenceNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[out_ReferenceNumber.Replace("REFERENCE","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[String.IsNullOrEmpty(out_BeginDate)]" sap:VirtualizedContainerService.HintSize="738.4,209.6" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_BeginDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString," BEGIN DT ((0?[13578]|10|12)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1}))|(0?[2469]|11)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1})))").Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
              <If Condition="[String.IsNullOrEmpty(out_EndDate)]" sap:VirtualizedContainerService.HintSize="738.4,209.6" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_EndDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString," END DT ((0?[13578]|10|12)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1}))|(0?[2469]|11)(-|\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\/)((19)([2-9])(\d{1})|(20)([01])(\d{1})|([8901])(\d{1})))").Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
              <If Condition="[string.IsNullOrEmpty(System.Text.RegularExpressions.Regex.Match(item.ToString,&quot;\b(SALES|DIV)\b.* (\-?\d+\.\d+)&quot;).Value.Trim)]" sap:VirtualizedContainerService.HintSize="738.4,620" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="336,470.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap:VirtualizedContainerService.HintSize="297.6,377.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="ui:GenericValue" Name="salesAmountGroups" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[salesAmount]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString,"\b(SALES|DIV)\b.* (\-?\d+\.\d+)").Groups(2).Value.Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{salesAmount}]" DataTable="[out_dt_salesAmount]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="259.2,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                      <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ProductName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString,"^([\w\-]+)").Value.Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{out_dt_ProductName}]" DataTable="[out_dt_ProductName]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="259.2,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                    </Sequence>
                  </Sequence>
                </If.Else>
              </If>
              <If Condition="[String.IsNullOrEmpty(System.Text.RegularExpressions.Regex.Match(item.ToString,&quot;(?&lt;=[0-9]-)([0-9]{5,})(?= )&quot;).Value)]" sap:VirtualizedContainerService.HintSize="738.4,564.8" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="297.6,415.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[upcCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString,"(?&lt;=[0-9]-)([0-9]{5,})(?= )").Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[upcFamily]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(item.ToString,"([0-9]{5,})(?=)-([0-9]{5,})(?= )").Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="259.2,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[upcFamily]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[upcFamily.Substring(0,5)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{upcCode,upcFamily}]" DataTable="[out_dt_UPC]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="259.2,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>